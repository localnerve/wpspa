{
  "name": "slash",
  "version": "0.1.0",
  "description": "Convert Windows backslash paths to slash paths",
  "keywords": [
    "path",
    "seperator",
    "sep",
    "slash",
    "backslash",
    "windows",
    "win"
  ],
  "homepage": "https://github.com/sindresorhus/slash",
  "bugs": {
    "url": "https://github.com/sindresorhus/slash/issues"
  },
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "http://sindresorhus.com"
  },
  "main": "slash.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/sindresorhus/slash.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "devDependencies": {
    "mocha": "~1.11.0"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "licenses": [
    {
      "type": "MIT"
    }
  ],
  "files": [
    "slash.js"
  ],
  "readme": "# slash [![Build Status](https://secure.travis-ci.org/sindresorhus/slash.png?branch=master)](http://travis-ci.org/sindresorhus/slash)\n\nConvert Windows backslash paths to slash paths.\n\n[Forward-slash paths can be used in Windows](http://superuser.com/a/176395/6877) as long as it's not an extended-length path and it doesn't contain Unicode.\n\n\n## Install\n\nInstall with [npm](https://npmjs.org): `npm install --save slash`\n\n\n## Example\n\n```js\nvar path = require('path');\nvar slash = require('slash');\n\nvar str = path.join('foo', 'bar');\nconsole.log(str);\n//=> foo\\\\bar\n\nif (process.platform === 'win32') {\n\tstr = slash(str);\n\tconsole.log(str);\n\t//=> foo/bar\n}\n```\n\n\n## API\n\n### slash(path)\n\nType: `String`\n\nAccepts a Windows backslash path and returns a slash path.\n\n\n## License\n\nMIT License • © [Sindre Sorhus](http://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "_id": "slash@0.1.0",
  "dist": {
    "shasum": "79d28ba9033f0a44fb84dac57d2cb39ad045ed00"
  },
  "_from": "slash@~0.1.0",
  "_resolved": "https://registry.npmjs.org/slash/-/slash-0.1.0.tgz"
}
